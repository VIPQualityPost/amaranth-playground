
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.30+25 (git sha1 104edb458, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `top.ys' --

1. Executing RTLIL frontend.
Input filename: top.il

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \top.pin_clk100_0
Used module:     \top.pin_anodes_0
Used module:     \top.pin_seven_segment_0__dp
Used module:     \top.pin_seven_segment_0__g
Used module:     \top.pin_seven_segment_0__f
Used module:     \top.pin_seven_segment_0__e
Used module:     \top.pin_seven_segment_0__d
Used module:     \top.pin_seven_segment_0__c
Used module:     \top.pin_seven_segment_0__b
Used module:     \top.pin_seven_segment_0__a
Used module:     \top.cd_sync
Used module:     \top.strobe
Used module:         \top.strobe.onehot
Used module:     \top.digit3
Used module:     \top.digit2
Used module:     \top.digit1
Used module:     \top.digit0
Used module:     \top.second
Used module:     \top.minute
Used module:     \top.hour

2.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \top.pin_clk100_0
Used module:     \top.pin_anodes_0
Used module:     \top.pin_seven_segment_0__dp
Used module:     \top.pin_seven_segment_0__g
Used module:     \top.pin_seven_segment_0__f
Used module:     \top.pin_seven_segment_0__e
Used module:     \top.pin_seven_segment_0__d
Used module:     \top.pin_seven_segment_0__c
Used module:     \top.pin_seven_segment_0__b
Used module:     \top.pin_seven_segment_0__a
Used module:     \top.cd_sync
Used module:     \top.strobe
Used module:         \top.strobe.onehot
Used module:     \top.digit3
Used module:     \top.digit2
Used module:     \top.digit1
Used module:     \top.digit0
Used module:     \top.second
Used module:     \top.minute
Used module:     \top.hour
Removed 0 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$241 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$234 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$230 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$223 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$220 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$217 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$214 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$211 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$203 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$196 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$192 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$185 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$182 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$179 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$176 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$173 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $group_3 in module top.
Marked 1 switch rules as full_case in process $group_2 in module top.
Marked 1 switch rules as full_case in process $group_1 in module top.
Marked 1 switch rules as full_case in process $group_0 in module top.
Marked 1 switch rules as full_case in process $group_2 in module top.cd_sync.
Marked 1 switch rules as full_case in process $group_1 in module top.strobe.
Marked 1 switch rules as full_case in process $group_0 in module top.strobe.onehot.
Marked 1 switch rules as full_case in process $group_0 in module top.digit3.
Marked 1 switch rules as full_case in process $group_0 in module top.digit2.
Marked 1 switch rules as full_case in process $group_0 in module top.digit1.
Marked 1 switch rules as full_case in process $group_0 in module top.digit0.
Marked 2 switch rules as full_case in process $group_7 in module top.second.
Marked 2 switch rules as full_case in process $group_6 in module top.second.
Marked 3 switch rules as full_case in process $group_5 in module top.second.
Marked 3 switch rules as full_case in process $group_4 in module top.second.
Marked 3 switch rules as full_case in process $group_3 in module top.second.
Marked 2 switch rules as full_case in process $group_2 in module top.second.
Marked 3 switch rules as full_case in process $group_0 in module top.second.
Marked 2 switch rules as full_case in process $group_7 in module top.minute.
Marked 2 switch rules as full_case in process $group_6 in module top.minute.
Marked 3 switch rules as full_case in process $group_5 in module top.minute.
Marked 3 switch rules as full_case in process $group_4 in module top.minute.
Marked 3 switch rules as full_case in process $group_3 in module top.minute.
Marked 2 switch rules as full_case in process $group_2 in module top.minute.
Marked 3 switch rules as full_case in process $group_0 in module top.minute.
Marked 2 switch rules as full_case in process $group_7 in module top.hour.
Marked 2 switch rules as full_case in process $group_6 in module top.hour.
Marked 3 switch rules as full_case in process $group_5 in module top.hour.
Marked 3 switch rules as full_case in process $group_4 in module top.hour.
Marked 3 switch rules as full_case in process $group_3 in module top.hour.
Marked 2 switch rules as full_case in process $group_2 in module top.hour.
Marked 3 switch rules as full_case in process $group_0 in module top.hour.
Removed a total of 0 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 35 redundant assignments.
Promoted 34 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$181'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$175'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$170'.
  Set init value: \Q = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$241'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$230'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$220'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$214'.
Found async reset \S in `\SB_DFFES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$203'.
Found async reset \R in `\SB_DFFER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$192'.
Found async reset \S in `\SB_DFFS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$182'.
Found async reset \R in `\SB_DFFR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$176'.

2.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 4 switches.
<suppressed ~179 debug messages>

2.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$233'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFN.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$207'.
Creating decoders for process `\SB_DFFES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$202'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$195'.
Creating decoders for process `\SB_DFFER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$184'.
Creating decoders for process `\SB_DFFS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$182'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$181'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFFR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$176'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$175'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFFE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$171'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$170'.
Creating decoders for process `\SB_DFF.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$169'.
Creating decoders for process `\top.$group_14'.
     1/1: \strobe_i3$next
Creating decoders for process `\top.$group_13'.
     1/1: \strobe_i2$next
Creating decoders for process `\top.$group_12'.
     1/1: \strobe_i1$next
Creating decoders for process `\top.$group_11'.
     1/1: \strobe_i0$next
Creating decoders for process `\top.$group_10'.
     1/1: \digit3_i$next
Creating decoders for process `\top.$group_9'.
     1/1: \digit2_i$next
Creating decoders for process `\top.$group_8'.
     1/1: \digit1_i$next
Creating decoders for process `\top.$group_7'.
     1/1: \digit0_i$next
Creating decoders for process `\top.$group_6'.
     1/1: \hour_i$next
Creating decoders for process `\top.$group_5'.
     1/1: \minute_i$next
Creating decoders for process `\top.$group_4'.
     1/1: \second_i$next
Creating decoders for process `\top.$group_3'.
     1/1: \counter$next
Creating decoders for process `\top.$group_2'.
     1/1: \hrCounter$next
Creating decoders for process `\top.$group_1'.
     1/1: \minCounter$next
Creating decoders for process `\top.$group_0'.
     1/1: \secCounter$next
Creating decoders for process `\top.pin_anodes_0.$group_0'.
Creating decoders for process `\top.pin_seven_segment_0__dp.$group_0'.
Creating decoders for process `\top.pin_seven_segment_0__g.$group_0'.
Creating decoders for process `\top.pin_seven_segment_0__f.$group_0'.
Creating decoders for process `\top.pin_seven_segment_0__e.$group_0'.
Creating decoders for process `\top.pin_seven_segment_0__d.$group_0'.
Creating decoders for process `\top.pin_seven_segment_0__c.$group_0'.
Creating decoders for process `\top.pin_seven_segment_0__b.$group_0'.
Creating decoders for process `\top.pin_seven_segment_0__a.$group_0'.
Creating decoders for process `\top.cd_sync.$group_4'.
Creating decoders for process `\top.cd_sync.$group_3'.
Creating decoders for process `\top.cd_sync.$group_2'.
     1/1: \timer$next
Creating decoders for process `\top.cd_sync.$group_1'.
     1/1: \ready$next
Creating decoders for process `\top.cd_sync.$group_0'.
Creating decoders for process `\top.strobe.$group_4'.
     1/7: \seven_segment_0__g__o$next
     2/7: \seven_segment_0__e__o$next
     3/7: \seven_segment_0__d__o$next
     4/7: \seven_segment_0__c__o$next
     5/7: \seven_segment_0__b__o$next
     6/7: \seven_segment_0__a__o$next
     7/7: \seven_segment_0__f__o$next
Creating decoders for process `\top.strobe.$group_3'.
     1/1: \anodes_0__o$next
Creating decoders for process `\top.strobe.$group_2'.
     1/1: \ocnt$next
Creating decoders for process `\top.strobe.$group_1'.
     1/1: \counter$next
Creating decoders for process `\top.strobe.$group_0'.
     1/1: \onehot_i
Creating decoders for process `\top.strobe.onehot.$group_0'.
     1/1: \o
Creating decoders for process `\top.digit3.$group_0'.
     1/1: \o
Creating decoders for process `\top.digit2.$group_0'.
     1/1: \o
Creating decoders for process `\top.digit1.$group_0'.
     1/1: \o
Creating decoders for process `\top.digit0.$group_0'.
     1/1: \o
Creating decoders for process `\top.second.$group_7'.
     1/1: \outHi$next
Creating decoders for process `\top.second.$group_6'.
     1/1: \outLo$next
Creating decoders for process `\top.second.$group_5'.
     1/1: \done$next
Creating decoders for process `\top.second.$group_4'.
     1/1: \addTens$next
Creating decoders for process `\top.second.$group_3'.
     1/1: \addOnes$next
Creating decoders for process `\top.second.$group_2'.
     1/1: \scratchpad_bits$next
Creating decoders for process `\top.second.$group_1'.
     1/1: \prevInput$next
Creating decoders for process `\top.second.$group_0'.
     1/1: \shifts$next
Creating decoders for process `\top.minute.$group_7'.
     1/1: \outHi$next
Creating decoders for process `\top.minute.$group_6'.
     1/1: \outLo$next
Creating decoders for process `\top.minute.$group_5'.
     1/1: \done$next
Creating decoders for process `\top.minute.$group_4'.
     1/1: \addTens$next
Creating decoders for process `\top.minute.$group_3'.
     1/1: \addOnes$next
Creating decoders for process `\top.minute.$group_2'.
     1/1: \scratchpad_bits$next
Creating decoders for process `\top.minute.$group_1'.
     1/1: \prevInput$next
Creating decoders for process `\top.minute.$group_0'.
     1/1: \shifts$next
Creating decoders for process `\top.hour.$group_7'.
     1/1: \outHi$next
Creating decoders for process `\top.hour.$group_6'.
     1/1: \outLo$next
Creating decoders for process `\top.hour.$group_5'.
     1/1: \done$next
Creating decoders for process `\top.hour.$group_4'.
     1/1: \addTens$next
Creating decoders for process `\top.hour.$group_3'.
     1/1: \addOnes$next
Creating decoders for process `\top.hour.$group_2'.
     1/1: \scratchpad_bits$next
Creating decoders for process `\top.hour.$group_1'.
     1/1: \prevInput$next
Creating decoders for process `\top.hour.$group_0'.
     1/1: \shifts$next

2.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$241'.
  created $adff cell `$procdff$872' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$234'.
  created $dff cell `$procdff$873' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$230'.
  created $adff cell `$procdff$874' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$223'.
  created $dff cell `$procdff$875' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$220'.
  created $adff cell `$procdff$876' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$217'.
  created $dff cell `$procdff$877' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$214'.
  created $adff cell `$procdff$878' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$211'.
  created $dff cell `$procdff$879' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$209'.
  created $dff cell `$procdff$880' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$207'.
  created $dff cell `$procdff$881' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$203'.
  created $adff cell `$procdff$882' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$196'.
  created $dff cell `$procdff$883' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$192'.
  created $adff cell `$procdff$884' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$185'.
  created $dff cell `$procdff$885' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$182'.
  created $adff cell `$procdff$886' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$179'.
  created $dff cell `$procdff$887' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$176'.
  created $adff cell `$procdff$888' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$173'.
  created $dff cell `$procdff$889' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$171'.
  created $dff cell `$procdff$890' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$169'.
  created $dff cell `$procdff$891' with positive edge clock.

2.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$229'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$222'.
Removing empty process `SB_DFFNS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$220'.
Removing empty process `SB_DFFNSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$219'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFNR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$214'.
Removing empty process `SB_DFFNSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFNE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFN.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$208'.
Removing empty process `SB_DFFN.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$207'.
Removing empty process `SB_DFFES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFES.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$202'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFESS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$195'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFER.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$191'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFESR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$184'.
Removing empty process `SB_DFFS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$182'.
Removing empty process `SB_DFFSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$181'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFSS.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFFR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$176'.
Removing empty process `SB_DFFSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$175'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFSR.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$172'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFFE.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFF.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$170'.
Removing empty process `SB_DFF.$proc$/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$169'.
Found and cleaned up 1 empty switch in `\top.$group_14'.
Removing empty process `top.$group_14'.
Found and cleaned up 1 empty switch in `\top.$group_13'.
Removing empty process `top.$group_13'.
Found and cleaned up 1 empty switch in `\top.$group_12'.
Removing empty process `top.$group_12'.
Found and cleaned up 1 empty switch in `\top.$group_11'.
Removing empty process `top.$group_11'.
Found and cleaned up 1 empty switch in `\top.$group_10'.
Removing empty process `top.$group_10'.
Found and cleaned up 1 empty switch in `\top.$group_9'.
Removing empty process `top.$group_9'.
Found and cleaned up 1 empty switch in `\top.$group_8'.
Removing empty process `top.$group_8'.
Found and cleaned up 1 empty switch in `\top.$group_7'.
Removing empty process `top.$group_7'.
Found and cleaned up 2 empty switches in `\top.$group_6'.
Removing empty process `top.$group_6'.
Found and cleaned up 2 empty switches in `\top.$group_5'.
Removing empty process `top.$group_5'.
Found and cleaned up 2 empty switches in `\top.$group_4'.
Removing empty process `top.$group_4'.
Found and cleaned up 2 empty switches in `\top.$group_3'.
Removing empty process `top.$group_3'.
Found and cleaned up 5 empty switches in `\top.$group_2'.
Removing empty process `top.$group_2'.
Found and cleaned up 4 empty switches in `\top.$group_1'.
Removing empty process `top.$group_1'.
Found and cleaned up 3 empty switches in `\top.$group_0'.
Removing empty process `top.$group_0'.
Removing empty process `top.pin_anodes_0.$group_0'.
Removing empty process `top.pin_seven_segment_0__dp.$group_0'.
Removing empty process `top.pin_seven_segment_0__g.$group_0'.
Removing empty process `top.pin_seven_segment_0__f.$group_0'.
Removing empty process `top.pin_seven_segment_0__e.$group_0'.
Removing empty process `top.pin_seven_segment_0__d.$group_0'.
Removing empty process `top.pin_seven_segment_0__c.$group_0'.
Removing empty process `top.pin_seven_segment_0__b.$group_0'.
Removing empty process `top.pin_seven_segment_0__a.$group_0'.
Removing empty process `top.cd_sync.$group_4'.
Removing empty process `top.cd_sync.$group_3'.
Found and cleaned up 1 empty switch in `\top.cd_sync.$group_2'.
Removing empty process `top.cd_sync.$group_2'.
Found and cleaned up 1 empty switch in `\top.cd_sync.$group_1'.
Removing empty process `top.cd_sync.$group_1'.
Removing empty process `top.cd_sync.$group_0'.
Found and cleaned up 2 empty switches in `\top.strobe.$group_4'.
Removing empty process `top.strobe.$group_4'.
Found and cleaned up 2 empty switches in `\top.strobe.$group_3'.
Removing empty process `top.strobe.$group_3'.
Found and cleaned up 2 empty switches in `\top.strobe.$group_2'.
Removing empty process `top.strobe.$group_2'.
Found and cleaned up 2 empty switches in `\top.strobe.$group_1'.
Removing empty process `top.strobe.$group_1'.
Found and cleaned up 1 empty switch in `\top.strobe.$group_0'.
Removing empty process `top.strobe.$group_0'.
Found and cleaned up 2 empty switches in `\top.strobe.onehot.$group_0'.
Removing empty process `top.strobe.onehot.$group_0'.
Found and cleaned up 1 empty switch in `\top.digit3.$group_0'.
Removing empty process `top.digit3.$group_0'.
Found and cleaned up 1 empty switch in `\top.digit2.$group_0'.
Removing empty process `top.digit2.$group_0'.
Found and cleaned up 1 empty switch in `\top.digit1.$group_0'.
Removing empty process `top.digit1.$group_0'.
Found and cleaned up 1 empty switch in `\top.digit0.$group_0'.
Removing empty process `top.digit0.$group_0'.
Found and cleaned up 4 empty switches in `\top.second.$group_7'.
Removing empty process `top.second.$group_7'.
Found and cleaned up 4 empty switches in `\top.second.$group_6'.
Removing empty process `top.second.$group_6'.
Found and cleaned up 5 empty switches in `\top.second.$group_5'.
Removing empty process `top.second.$group_5'.
Found and cleaned up 6 empty switches in `\top.second.$group_4'.
Removing empty process `top.second.$group_4'.
Found and cleaned up 6 empty switches in `\top.second.$group_3'.
Removing empty process `top.second.$group_3'.
Found and cleaned up 7 empty switches in `\top.second.$group_2'.
Removing empty process `top.second.$group_2'.
Found and cleaned up 3 empty switches in `\top.second.$group_1'.
Removing empty process `top.second.$group_1'.
Found and cleaned up 5 empty switches in `\top.second.$group_0'.
Removing empty process `top.second.$group_0'.
Found and cleaned up 4 empty switches in `\top.minute.$group_7'.
Removing empty process `top.minute.$group_7'.
Found and cleaned up 4 empty switches in `\top.minute.$group_6'.
Removing empty process `top.minute.$group_6'.
Found and cleaned up 5 empty switches in `\top.minute.$group_5'.
Removing empty process `top.minute.$group_5'.
Found and cleaned up 6 empty switches in `\top.minute.$group_4'.
Removing empty process `top.minute.$group_4'.
Found and cleaned up 6 empty switches in `\top.minute.$group_3'.
Removing empty process `top.minute.$group_3'.
Found and cleaned up 7 empty switches in `\top.minute.$group_2'.
Removing empty process `top.minute.$group_2'.
Found and cleaned up 3 empty switches in `\top.minute.$group_1'.
Removing empty process `top.minute.$group_1'.
Found and cleaned up 5 empty switches in `\top.minute.$group_0'.
Removing empty process `top.minute.$group_0'.
Found and cleaned up 4 empty switches in `\top.hour.$group_7'.
Removing empty process `top.hour.$group_7'.
Found and cleaned up 4 empty switches in `\top.hour.$group_6'.
Removing empty process `top.hour.$group_6'.
Found and cleaned up 5 empty switches in `\top.hour.$group_5'.
Removing empty process `top.hour.$group_5'.
Found and cleaned up 6 empty switches in `\top.hour.$group_4'.
Removing empty process `top.hour.$group_4'.
Found and cleaned up 6 empty switches in `\top.hour.$group_3'.
Removing empty process `top.hour.$group_3'.
Found and cleaned up 7 empty switches in `\top.hour.$group_2'.
Removing empty process `top.hour.$group_2'.
Found and cleaned up 3 empty switches in `\top.hour.$group_1'.
Removing empty process `top.hour.$group_1'.
Found and cleaned up 5 empty switches in `\top.hour.$group_0'.
Removing empty process `top.hour.$group_0'.
Cleaned up 183 empty switches.

2.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
Optimizing module top.pin_clk100_0.
Optimizing module top.pin_anodes_0.
Optimizing module top.pin_seven_segment_0__dp.
<suppressed ~1 debug messages>
Optimizing module top.pin_seven_segment_0__g.
Optimizing module top.pin_seven_segment_0__f.
Optimizing module top.pin_seven_segment_0__e.
Optimizing module top.pin_seven_segment_0__d.
Optimizing module top.pin_seven_segment_0__c.
Optimizing module top.pin_seven_segment_0__b.
Optimizing module top.pin_seven_segment_0__a.
Optimizing module top.cd_sync.
Optimizing module top.strobe.
Optimizing module top.strobe.onehot.
<suppressed ~2 debug messages>
Optimizing module top.digit3.
Optimizing module top.digit2.
Optimizing module top.digit1.
Optimizing module top.digit0.
Optimizing module top.second.
<suppressed ~33 debug messages>
Optimizing module top.minute.
<suppressed ~33 debug messages>
Optimizing module top.hour.
<suppressed ~33 debug messages>

2.4. Executing FLATTEN pass (flatten design).
Deleting now unused module top.pin_clk100_0.
Deleting now unused module top.pin_anodes_0.
Deleting now unused module top.pin_seven_segment_0__dp.
Deleting now unused module top.pin_seven_segment_0__g.
Deleting now unused module top.pin_seven_segment_0__f.
Deleting now unused module top.pin_seven_segment_0__e.
Deleting now unused module top.pin_seven_segment_0__d.
Deleting now unused module top.pin_seven_segment_0__c.
Deleting now unused module top.pin_seven_segment_0__b.
Deleting now unused module top.pin_seven_segment_0__a.
Deleting now unused module top.cd_sync.
Deleting now unused module top.strobe.
Deleting now unused module top.strobe.onehot.
Deleting now unused module top.digit3.
Deleting now unused module top.digit2.
Deleting now unused module top.digit1.
Deleting now unused module top.digit0.
Deleting now unused module top.second.
Deleting now unused module top.minute.
Deleting now unused module top.hour.
<suppressed ~20 debug messages>

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~49 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 141 unused cells and 420 unused wires.
<suppressed ~173 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\minute.$procmux$684: \minute.done -> 1'1
      Replacing known input bits on port B of cell $flatten\minute.$procmux$691: \minute.done -> 1'0
      Replacing known input bits on port B of cell $flatten\minute.$procmux$688: \minute.done -> 1'0
      Replacing known input bits on port A of cell $flatten\minute.$procmux$714: \minute.addOnes -> 1'1
      Replacing known input bits on port A of cell $flatten\second.$procmux$580: \second.done -> 1'1
      Replacing known input bits on port B of cell $flatten\second.$procmux$587: \second.done -> 1'0
      Replacing known input bits on port B of cell $flatten\second.$procmux$584: \second.done -> 1'0
      Replacing known input bits on port A of cell $flatten\second.$procmux$610: \second.addOnes -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.10.6. Executing OPT_DFF pass (perform DFF optimizations).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 40 unused wires.
<suppressed ~1 debug messages>

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.13. Executing OPT_DFF pass (perform DFF optimizations).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.16. Finished OPT passes. (There is nothing left to do.)

2.11. Executing FSM pass (extract and optimize FSM).

2.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.strobe.anodes_0__o as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

2.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\strobe.$31 ($dff) from module top (D = $flatten\strobe.$procmux$506_Y, Q = \strobe.seven_segment_0__g__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$892 ($sdff) from module top (D = $flatten\strobe.$17 [6], Q = \strobe.seven_segment_0__g__o).
Adding SRST signal on $flatten\strobe.$30 ($dff) from module top (D = $flatten\strobe.$procmux$530_Y, Q = \strobe.seven_segment_0__f__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$894 ($sdff) from module top (D = $flatten\strobe.$17 [5], Q = \strobe.seven_segment_0__f__o).
Adding SRST signal on $flatten\strobe.$29 ($dff) from module top (D = $flatten\strobe.$procmux$510_Y, Q = \strobe.seven_segment_0__e__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$896 ($sdff) from module top (D = $flatten\strobe.$17 [4], Q = \strobe.seven_segment_0__e__o).
Adding SRST signal on $flatten\strobe.$28 ($dff) from module top (D = $flatten\strobe.$procmux$514_Y, Q = \strobe.seven_segment_0__d__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$898 ($sdff) from module top (D = $flatten\strobe.$17 [3], Q = \strobe.seven_segment_0__d__o).
Adding SRST signal on $flatten\strobe.$27 ($dff) from module top (D = $flatten\strobe.$procmux$518_Y, Q = \strobe.seven_segment_0__c__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$900 ($sdff) from module top (D = $flatten\strobe.$17 [2], Q = \strobe.seven_segment_0__c__o).
Adding SRST signal on $flatten\strobe.$26 ($dff) from module top (D = $flatten\strobe.$procmux$522_Y, Q = \strobe.seven_segment_0__b__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$902 ($sdff) from module top (D = $flatten\strobe.$17 [1], Q = \strobe.seven_segment_0__b__o).
Adding SRST signal on $flatten\strobe.$25 ($dff) from module top (D = $flatten\strobe.$procmux$526_Y, Q = \strobe.seven_segment_0__a__o, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$904 ($sdff) from module top (D = $flatten\strobe.$17 [0], Q = \strobe.seven_segment_0__a__o).
Adding SRST signal on $flatten\strobe.$24 ($dff) from module top (D = $flatten\strobe.$procmux$534_Y, Q = \strobe.anodes_0__o, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$906 ($sdff) from module top (D = \strobe.onehot_o, Q = \strobe.anodes_0__o).
Adding SRST signal on $flatten\strobe.$23 ($dff) from module top (D = $flatten\strobe.$procmux$538_Y, Q = \strobe.ocnt, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$908 ($sdff) from module top (D = $flatten\strobe.$10 [1:0], Q = \strobe.ocnt).
Adding SRST signal on $flatten\strobe.$22 ($dff) from module top (D = $flatten\strobe.$5 [18:0], Q = \strobe.counter, rval = 19'0000000000000000000).
Adding SRST signal on $flatten\second.$94 ($dff) from module top (D = $flatten\second.$procmux$566_Y, Q = \second.outHi, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$915 ($sdff) from module top (D = \second.scratchpad_bits [13:10], Q = \second.outHi).
Adding SRST signal on $flatten\second.$93 ($dff) from module top (D = $flatten\second.$procmux$576_Y, Q = \second.outLo, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$925 ($sdff) from module top (D = \second.scratchpad_bits [9:6], Q = \second.outLo).
Adding SRST signal on $flatten\second.$92 ($dff) from module top (D = $flatten\second.$procmux$589_Y, Q = \second.done, rval = 1'0).
Adding SRST signal on $flatten\second.$91 ($dff) from module top (D = $flatten\second.$procmux$605_Y, Q = \second.addTens, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$936 ($sdff) from module top (D = $flatten\second.$procmux$596_Y, Q = \second.addTens).
Adding SRST signal on $flatten\second.$90 ($dff) from module top (D = $flatten\second.$procmux$621_Y, Q = \second.addOnes, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$944 ($sdff) from module top (D = $flatten\second.$procmux$614_Y, Q = \second.addOnes).
Adding SRST signal on $flatten\second.$89 ($dff) from module top (D = $flatten\second.$procmux$639_Y, Q = \second.scratchpad_bits, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:266:slice$952 ($sdff) from module top (D = $flatten\second.$procmux$637_Y, Q = \second.scratchpad_bits).
Adding SRST signal on $flatten\second.$88 ($dff) from module top (D = $flatten\second.$procmux$645_Y, Q = \second.prevInput, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$964 ($sdff) from module top (D = \second_i, Q = \second.prevInput).
Adding SRST signal on $flatten\second.$87 ($dff) from module top (D = $flatten\second.$procmux$660_Y, Q = \second.shifts, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$970 ($sdff) from module top (D = $flatten\second.$procmux$658_Y, Q = \second.shifts).
Adding SRST signal on $flatten\minute.$94 ($dff) from module top (D = $flatten\minute.$procmux$670_Y, Q = \minute.outHi, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$980 ($sdff) from module top (D = \minute.scratchpad_bits [13:10], Q = \minute.outHi).
Adding SRST signal on $flatten\minute.$93 ($dff) from module top (D = $flatten\minute.$procmux$680_Y, Q = \minute.outLo, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$990 ($sdff) from module top (D = \minute.scratchpad_bits [9:6], Q = \minute.outLo).
Adding SRST signal on $flatten\minute.$92 ($dff) from module top (D = $flatten\minute.$procmux$693_Y, Q = \minute.done, rval = 1'0).
Adding SRST signal on $flatten\minute.$91 ($dff) from module top (D = $flatten\minute.$procmux$709_Y, Q = \minute.addTens, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1001 ($sdff) from module top (D = $flatten\minute.$procmux$700_Y, Q = \minute.addTens).
Adding SRST signal on $flatten\minute.$90 ($dff) from module top (D = $flatten\minute.$procmux$725_Y, Q = \minute.addOnes, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1009 ($sdff) from module top (D = $flatten\minute.$procmux$718_Y, Q = \minute.addOnes).
Adding SRST signal on $flatten\minute.$89 ($dff) from module top (D = $flatten\minute.$procmux$743_Y, Q = \minute.scratchpad_bits, rval = 14'00000000000000).
Adding EN signal on $auto$ff.cc:266:slice$1017 ($sdff) from module top (D = $flatten\minute.$procmux$741_Y, Q = \minute.scratchpad_bits).
Adding SRST signal on $flatten\minute.$88 ($dff) from module top (D = $flatten\minute.$procmux$749_Y, Q = \minute.prevInput, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$1029 ($sdff) from module top (D = \minute_i, Q = \minute.prevInput).
Adding SRST signal on $flatten\minute.$87 ($dff) from module top (D = $flatten\minute.$procmux$764_Y, Q = \minute.shifts, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$1035 ($sdff) from module top (D = $flatten\minute.$procmux$762_Y, Q = \minute.shifts).
Adding EN signal on $flatten\cd_sync.$11 ($dff) from module top (D = $flatten\cd_sync.$5 [10:0], Q = \cd_sync.timer).
Adding EN signal on $flatten\cd_sync.$10 ($dff) from module top (D = 1'1, Q = \cd_sync.ready).
Adding SRST signal on $55 ($dff) from module top (D = \digit3_o, Q = \strobe_i3, rval = 7'0000000).
Adding SRST signal on $54 ($dff) from module top (D = \digit2_o, Q = \strobe_i2, rval = 7'0000000).
Adding SRST signal on $53 ($dff) from module top (D = \digit1_o, Q = \strobe_i1, rval = 7'0000000).
Adding SRST signal on $52 ($dff) from module top (D = \digit0_o, Q = \strobe_i0, rval = 7'0000000).
Adding SRST signal on $51 ($dff) from module top (D = \second.outLo, Q = \digit3_i, rval = 4'0000).
Adding SRST signal on $50 ($dff) from module top (D = \second.outHi, Q = \digit2_i, rval = 4'0000).
Adding SRST signal on $49 ($dff) from module top (D = \minute.outLo, Q = \digit1_i, rval = 4'0000).
Adding SRST signal on $48 ($dff) from module top (D = \minute.outHi, Q = \digit0_i, rval = 4'0000).
Adding SRST signal on $46 ($dff) from module top (D = $procmux$461_Y, Q = \minute_i, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$1055 ($sdff) from module top (D = \minCounter, Q = \minute_i).
Adding SRST signal on $45 ($dff) from module top (D = $procmux$465_Y, Q = \second_i, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$1057 ($sdff) from module top (D = \secCounter, Q = \second_i).
Adding SRST signal on $44 ($dff) from module top (D = $30 [26:0], Q = \counter, rval = 27'000000000000000000000000000).
Adding SRST signal on $42 ($dff) from module top (D = $procmux$490_Y, Q = \minCounter, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$1064 ($sdff) from module top (D = $procmux$486_Y, Q = \minCounter).
Adding SRST signal on $41 ($dff) from module top (D = $procmux$497_Y, Q = \secCounter, rval = 6'000000).
Adding EN signal on $auto$ff.cc:266:slice$1068 ($sdff) from module top (D = $procmux$495_Y, Q = \secCounter).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 91 unused cells and 91 unused wires.
<suppressed ~133 debug messages>

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.16. Rerunning OPT passes. (Maybe there is more to do..)

2.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

2.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.20. Executing OPT_DFF pass (perform DFF optimizations).

2.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.23. Finished OPT passes. (There is nothing left to do.)

2.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port top.$flatten\digit0.$auto$mem.cc:319:emit$396 ($flatten\digit0.$auto$proc_rom.cc:150:do_switch$394).
Removed top 28 address bits (of 32) from memory init port top.$flatten\digit1.$auto$mem.cc:319:emit$392 ($flatten\digit1.$auto$proc_rom.cc:150:do_switch$390).
Removed top 28 address bits (of 32) from memory init port top.$flatten\digit2.$auto$mem.cc:319:emit$388 ($flatten\digit2.$auto$proc_rom.cc:150:do_switch$386).
Removed top 28 address bits (of 32) from memory init port top.$flatten\digit3.$auto$mem.cc:319:emit$384 ($flatten\digit3.$auto$proc_rom.cc:150:do_switch$382).
Removed top 1 bits (of 7) from port Y of cell top.$7 ($add).
Removed top 1 bits (of 7) from port Y of cell top.$16 ($add).
Removed top 1 bits (of 28) from port Y of cell top.$32 ($add).
Removed top 2 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1022 ($ne).
Removed top 1 bits (of 15) from port Y of cell top.$flatten\minute.$39 ($add).
Removed top 1 bits (of 15) from port Y of cell top.$flatten\minute.$34 ($add).
Removed top 1 bits (of 4) from port Y of cell top.$flatten\minute.$13 ($add).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$975 ($ne).
Removed top 1 bits (of 15) from port Y of cell top.$flatten\second.$39 ($add).
Removed top 1 bits (of 15) from port Y of cell top.$flatten\second.$34 ($add).
Removed top 1 bits (of 4) from port Y of cell top.$flatten\second.$13 ($add).
Removed top 2 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$957 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$flatten\strobe.\onehot.$procmux$552_CMP0 ($eq).
Removed top 21 bits (of 28) from port Y of cell top.$flatten\strobe.$21 ($sshr).
Removed top 1 bits (of 3) from port Y of cell top.$flatten\strobe.$12 ($add).
Removed top 1 bits (of 20) from port Y of cell top.$flatten\strobe.$7 ($add).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1040 ($ne).
Removed top 1 bits (of 12) from port Y of cell top.$flatten\cd_sync.$7 ($add).
Removed top 1 bits (of 7) from wire top.$14.
Removed top 1 bits (of 28) from wire top.$30.
Removed top 1 bits (of 7) from wire top.$5.
Removed top 1 bits (of 12) from wire top.$flatten\cd_sync.$5.
Removed top 1 bits (of 4) from wire top.$flatten\minute.$11.
Removed top 1 bits (of 15) from wire top.$flatten\minute.$32.
Removed top 5 bits (of 15) from wire top.$flatten\minute.$37.
Removed top 1 bits (of 4) from wire top.$flatten\second.$11.
Removed top 1 bits (of 15) from wire top.$flatten\second.$32.
Removed top 13 bits (of 15) from wire top.$flatten\second.$37.
Removed top 11 bits (of 14) from wire top.$flatten\second.$procmux$628_Y.
Removed top 1 bits (of 3) from wire top.$flatten\strobe.$10.
Removed top 21 bits (of 28) from wire top.$flatten\strobe.$17.
Removed top 6 bits (of 20) from wire top.$flatten\strobe.$5.

2.14. Executing PEEPOPT pass (run peephole optimizers).

2.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

2.16. Executing SHARE pass (SAT-based resource sharing).

2.17. Executing TECHMAP pass (map to technology primitives).

2.17.1. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.17.2. Continuing TECHMAP pass.
Using template $paramod$fc417d2e8c11f8fd0321206ae65056a1f93d1c72\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$1589de7c7e0b2319786fc7a60d78b5cf9da00c8d\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~70 debug messages>

2.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

2.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $16 ($add).
  creating $macc model for $32 ($add).
  creating $macc model for $7 ($add).
  creating $macc model for $flatten\cd_sync.$7 ($add).
  creating $macc model for $flatten\minute.$13 ($add).
  creating $macc model for $flatten\minute.$34 ($add).
  creating $macc model for $flatten\minute.$39 ($add).
  creating $macc model for $flatten\second.$13 ($add).
  creating $macc model for $flatten\second.$34 ($add).
  creating $macc model for $flatten\second.$39 ($add).
  creating $macc model for $flatten\strobe.$12 ($add).
  creating $macc model for $flatten\strobe.$19 ($mul).
  creating $macc model for $flatten\strobe.$7 ($add).
  creating $alu model for $macc $flatten\strobe.$7.
  creating $alu model for $macc $flatten\strobe.$12.
  creating $alu model for $macc $flatten\second.$39.
  creating $alu model for $macc $flatten\second.$34.
  creating $alu model for $macc $flatten\second.$13.
  creating $alu model for $macc $flatten\minute.$39.
  creating $alu model for $macc $flatten\minute.$34.
  creating $alu model for $macc $flatten\minute.$13.
  creating $alu model for $macc $flatten\cd_sync.$7.
  creating $alu model for $macc $7.
  creating $alu model for $macc $32.
  creating $alu model for $macc $16.
  creating $macc cell for $flatten\strobe.$19: $auto$alumacc.cc:365:replace_macc$1093
  creating $alu cell for $16: $auto$alumacc.cc:485:replace_alu$1094
  creating $alu cell for $32: $auto$alumacc.cc:485:replace_alu$1097
  creating $alu cell for $7: $auto$alumacc.cc:485:replace_alu$1100
  creating $alu cell for $flatten\cd_sync.$7: $auto$alumacc.cc:485:replace_alu$1103
  creating $alu cell for $flatten\minute.$13: $auto$alumacc.cc:485:replace_alu$1106
  creating $alu cell for $flatten\minute.$34: $auto$alumacc.cc:485:replace_alu$1109
  creating $alu cell for $flatten\minute.$39: $auto$alumacc.cc:485:replace_alu$1112
  creating $alu cell for $flatten\second.$13: $auto$alumacc.cc:485:replace_alu$1115
  creating $alu cell for $flatten\second.$34: $auto$alumacc.cc:485:replace_alu$1118
  creating $alu cell for $flatten\second.$39: $auto$alumacc.cc:485:replace_alu$1121
  creating $alu cell for $flatten\strobe.$12: $auto$alumacc.cc:485:replace_alu$1124
  creating $alu cell for $flatten\strobe.$7: $auto$alumacc.cc:485:replace_alu$1127
  created 12 $alu and 1 $macc cells.

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

2.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.6. Executing OPT_DFF pass (perform DFF optimizations).

2.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.9. Finished OPT passes. (There is nothing left to do.)

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

2.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

2.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394'[0] in module `\top': merging output FF to cell.
Checking read port `$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390'[0] in module `\top': merging output FF to cell.
Checking read port `$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386'[0] in module `\top': merging output FF to cell.
Checking read port `$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382'[0] in module `\top': merging output FF to cell.

2.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 36 unused wires.
<suppressed ~13 debug messages>

2.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394
using FF mapping for memory top.$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390
using FF mapping for memory top.$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386
using FF mapping for memory top.$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382
<suppressed ~208 debug messages>

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.25.2. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~15 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

2.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$953 ($sdffe) from module top (D = $flatten\second.$procmux$637_Y [9:6], Q = \second.scratchpad_bits [9:6]).
Adding EN signal on $auto$ff.cc:266:slice$953 ($sdffe) from module top (D = $flatten\second.$procmux$637_Y [5:0], Q = \second.scratchpad_bits [5:0]).
Adding EN signal on $auto$ff.cc:266:slice$1018 ($sdffe) from module top (D = $flatten\minute.$procmux$741_Y [9:6], Q = \minute.scratchpad_bits [9:6]).
Adding EN signal on $auto$ff.cc:266:slice$1018 ($sdffe) from module top (D = $flatten\minute.$procmux$741_Y [5:0], Q = \minute.scratchpad_bits [5:0]).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 14 unused wires.
<suppressed ~2 debug messages>

2.27.5. Rerunning OPT passes. (Removed registers in this run.)

2.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.27.8. Executing OPT_DFF pass (perform DFF optimizations).

2.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.27.10. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\digit0.$auto$proc_rom.cc:150:do_switch$394 in module \top:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of top.$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394: $$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\digit1.$auto$proc_rom.cc:150:do_switch$390 in module \top:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of top.$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390: $$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\digit2.$auto$proc_rom.cc:150:do_switch$386 in module \top:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of top.$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386: $$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\digit3.$auto$proc_rom.cc:150:do_switch$382 in module \top:
  created 16 $dff cells and 0 static cells of width 7.
Extracted data FF from read port 0 of top.$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382: $$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1214: { $auto$opt_dff.cc:194:make_patterns_logic$1023 $auto$rtlil.cc:2399:Not$1006 $auto$opt_dff.cc:194:make_patterns_logic$1019 $auto$opt_dff.cc:194:make_patterns_logic$1211 $auto$opt_dff.cc:194:make_patterns_logic$1204 $auto$opt_dff.cc:194:make_patterns_logic$1021 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1201: { $auto$opt_dff.cc:194:make_patterns_logic$958 $auto$opt_dff.cc:194:make_patterns_logic$954 $auto$opt_dff.cc:194:make_patterns_logic$956 $auto$opt_dff.cc:194:make_patterns_logic$1198 $auto$rtlil.cc:2399:Not$922 $auto$opt_dff.cc:194:make_patterns_logic$1191 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1194: { $auto$opt_dff.cc:194:make_patterns_logic$958 $auto$opt_dff.cc:194:make_patterns_logic$954 $auto$opt_dff.cc:194:make_patterns_logic$956 $auto$rtlil.cc:2399:Not$922 $auto$opt_dff.cc:194:make_patterns_logic$1191 }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1207: { $auto$opt_dff.cc:194:make_patterns_logic$1023 $auto$rtlil.cc:2399:Not$1006 $auto$opt_dff.cc:194:make_patterns_logic$1019 $auto$opt_dff.cc:194:make_patterns_logic$1204 $auto$opt_dff.cc:194:make_patterns_logic$1021 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][6]$1390:
      Old ports: A=7'1001110, B=7'0111101, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$1370
      New ports: A=2'10, B=2'01, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$1370 [1:0]
      New connections: $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$1370 [6:2] = { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$1370 [1:0] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$1370 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][5]$1387:
      Old ports: A=7'1110111, B=7'0011111, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368 [5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368 [3] }
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368 [6] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368 [4] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368 [2:0] } = { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368 [5] 4'1111 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][4]$1384:
      Old ports: A=7'1111111, B=7'1111011, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$a$1367
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$a$1367 [2]
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$a$1367 [6:3] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$a$1367 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][3]$1381:
      Old ports: A=7'1011111, B=7'1110000, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [0] }
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [6] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [4:1] } = { 2'11 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [0] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [0] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][2]$1378:
      Old ports: A=7'0110011, B=7'1011011, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [3] }
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [6] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [4] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [2:0] } = { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [3] 4'1011 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][1]$1375:
      Old ports: A=7'1101101, B=7'1111001, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362 [4] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362 [2] }
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362 [6:5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362 [3] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362 [1:0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][0]$1372:
      Old ports: A=7'1111110, B=7'0110000, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [1]
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [6:2] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [0] } = { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [1] 2'11 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [1] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][3][6]$1345:
      Old ports: A=7'1001110, B=7'0111101, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$a$1325
      New ports: A=2'10, B=2'01, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$a$1325 [1:0]
      New connections: $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$a$1325 [6:2] = { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$a$1325 [1:0] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$a$1325 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][3][5]$1342:
      Old ports: A=7'1110111, B=7'0011111, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323 [5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323 [3] }
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323 [6] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323 [4] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323 [2:0] } = { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323 [5] 4'1111 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][3][4]$1339:
      Old ports: A=7'1111111, B=7'1111011, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$a$1322
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$a$1322 [2]
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$a$1322 [6:3] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$a$1322 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][3][3]$1336:
      Old ports: A=7'1011111, B=7'1110000, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [0] }
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [6] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [4:1] } = { 2'11 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [0] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [0] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][3][2]$1333:
      Old ports: A=7'0110011, B=7'1011011, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [3] }
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [6] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [4] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [2:0] } = { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [3] 4'1011 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][3][1]$1330:
      Old ports: A=7'1101101, B=7'1111001, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317 [4] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317 [2] }
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317 [6:5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317 [3] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317 [1:0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][3][0]$1327:
      Old ports: A=7'1111110, B=7'0110000, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [1]
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [6:2] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [0] } = { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [1] 2'11 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [1] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][3][6]$1300:
      Old ports: A=7'1001110, B=7'0111101, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$a$1280
      New ports: A=2'10, B=2'01, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$a$1280 [1:0]
      New connections: $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$a$1280 [6:2] = { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$a$1280 [1:0] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$a$1280 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][3][5]$1297:
      Old ports: A=7'1110111, B=7'0011111, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278 [5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278 [3] }
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278 [6] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278 [4] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278 [2:0] } = { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278 [5] 4'1111 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][3][4]$1294:
      Old ports: A=7'1111111, B=7'1111011, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$a$1277
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$a$1277 [2]
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$a$1277 [6:3] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$a$1277 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][3][3]$1291:
      Old ports: A=7'1011111, B=7'1110000, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [0] }
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [6] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [4:1] } = { 2'11 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [0] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [0] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][3][2]$1288:
      Old ports: A=7'0110011, B=7'1011011, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [3] }
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [6] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [4] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [2:0] } = { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [3] 4'1011 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][3][1]$1285:
      Old ports: A=7'1101101, B=7'1111001, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272 [4] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272 [2] }
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272 [6:5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272 [3] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272 [1:0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][3][0]$1282:
      Old ports: A=7'1111110, B=7'0110000, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [1]
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [6:2] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [0] } = { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [1] 2'11 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [1] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][3][6]$1255:
      Old ports: A=7'1001110, B=7'0111101, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$a$1235
      New ports: A=2'10, B=2'01, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$a$1235 [1:0]
      New connections: $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$a$1235 [6:2] = { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$a$1235 [1:0] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$a$1235 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][3][5]$1252:
      Old ports: A=7'1110111, B=7'0011111, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233 [5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233 [3] }
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233 [6] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233 [4] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233 [2:0] } = { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233 [5] 4'1111 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][3][4]$1249:
      Old ports: A=7'1111111, B=7'1111011, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$a$1232
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$a$1232 [2]
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$a$1232 [6:3] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$a$1232 [1:0] } = 6'111111
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][3][3]$1246:
      Old ports: A=7'1011111, B=7'1110000, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [0] }
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [6] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [4:1] } = { 2'11 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [0] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [0] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][3][2]$1243:
      Old ports: A=7'0110011, B=7'1011011, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [3] }
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [6] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [4] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [2:0] } = { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [3] 4'1011 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][3][1]$1240:
      Old ports: A=7'1101101, B=7'1111001, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227 [4] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227 [2] }
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227 [6:5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227 [3] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227 [1:0] } = 5'11101
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][3][0]$1237:
      Old ports: A=7'1111110, B=7'0110000, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [1]
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [6:2] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [0] } = { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [1] 2'11 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [1] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][3][7]$1258:
      Old ports: A=7'1001111, B=7'1000111, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$b$1236
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$b$1236 [3]
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$b$1236 [6:4] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$b$1236 [2:0] } = 6'100111
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][3][7]$1303:
      Old ports: A=7'1001111, B=7'1000111, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$b$1281
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$b$1281 [3]
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$b$1281 [6:4] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$b$1281 [2:0] } = 6'100111
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][3][7]$1348:
      Old ports: A=7'1001111, B=7'1000111, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$b$1326
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$b$1326 [3]
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$b$1326 [6:4] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$b$1326 [2:0] } = 6'100111
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][3][7]$1393:
      Old ports: A=7'1001111, B=7'1000111, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$b$1371
      New ports: A=1'1, B=1'0, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$b$1371 [3]
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$b$1371 [6:4] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$b$1371 [2:0] } = 6'100111
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$1369:
      Old ports: A=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$1370, B=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$b$1371, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$b$1359
      New ports: A={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$1370 [0] 1'1 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$a$1370 [1:0] }, B={ 1'0 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][3]$b$1371 [3] 2'11 }, Y={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$b$1359 [4:3] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$b$1359 [1:0] }
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$b$1359 [6:5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$b$1359 [2] } = { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$b$1359 [1] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$b$1359 [4] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$1366:
      Old ports: A=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$a$1367, B=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$a$1358
      New ports: A={ 2'11 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$a$1367 [2] }, B={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368 [5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][2]$b$1368 [3] 1'1 }, Y={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$a$1358 [5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$a$1358 [3:2] }
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$a$1358 [6] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$a$1358 [4] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$a$1358 [1:0] } = { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][1]$a$1358 [5] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$1363:
      Old ports: A=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364, B=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$b$1356
      New ports: A={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [3] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$a$1364 [3] 2'01 }, B={ 1'1 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [0] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [0] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][1]$b$1365 [0] }, Y={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$b$1356 [6:5] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$b$1356 [3:2] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$b$1356 [0] }
      New connections: { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$b$1356 [4] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$b$1356 [1] } = { 1'1 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$b$1356 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$1360:
      Old ports: A=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361, B=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$a$1355
      New ports: A={ 1'1 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [1] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [1] $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$a$1361 [1] 1'0 }, B={ $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362 [4] 1'1 $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][2][0]$b$1362 [2] 2'01 }, Y=$memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$a$1355 [4:0]
      New connections: $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$a$1355 [6:5] = { $memory$flatten\digit3.$auto$proc_rom.cc:150:do_switch$382$rdmux[0][1][0]$a$1355 [3] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$1324:
      Old ports: A=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$a$1325, B=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$b$1326, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$b$1314
      New ports: A={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$a$1325 [0] 1'1 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$a$1325 [1:0] }, B={ 1'0 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][3]$b$1326 [3] 2'11 }, Y={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$b$1314 [4:3] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$b$1314 [1:0] }
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$b$1314 [6:5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$b$1314 [2] } = { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$b$1314 [1] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$b$1314 [4] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$1321:
      Old ports: A=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$a$1322, B=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$a$1313
      New ports: A={ 2'11 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$a$1322 [2] }, B={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323 [5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][2]$b$1323 [3] 1'1 }, Y={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$a$1313 [5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$a$1313 [3:2] }
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$a$1313 [6] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$a$1313 [4] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$a$1313 [1:0] } = { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][1]$a$1313 [5] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$1318:
      Old ports: A=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319, B=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$b$1311
      New ports: A={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [3] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$a$1319 [3] 2'01 }, B={ 1'1 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [0] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [0] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][1]$b$1320 [0] }, Y={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$b$1311 [6:5] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$b$1311 [3:2] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$b$1311 [0] }
      New connections: { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$b$1311 [4] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$b$1311 [1] } = { 1'1 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$b$1311 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$1315:
      Old ports: A=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316, B=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$a$1310
      New ports: A={ 1'1 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [1] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [1] $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$a$1316 [1] 1'0 }, B={ $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317 [4] 1'1 $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][2][0]$b$1317 [2] 2'01 }, Y=$memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$a$1310 [4:0]
      New connections: $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$a$1310 [6:5] = { $memory$flatten\digit2.$auto$proc_rom.cc:150:do_switch$386$rdmux[0][1][0]$a$1310 [3] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$1279:
      Old ports: A=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$a$1280, B=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$b$1281, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$b$1269
      New ports: A={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$a$1280 [0] 1'1 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$a$1280 [1:0] }, B={ 1'0 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][3]$b$1281 [3] 2'11 }, Y={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$b$1269 [4:3] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$b$1269 [1:0] }
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$b$1269 [6:5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$b$1269 [2] } = { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$b$1269 [1] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$b$1269 [4] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$1276:
      Old ports: A=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$a$1277, B=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$a$1268
      New ports: A={ 2'11 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$a$1277 [2] }, B={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278 [5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][2]$b$1278 [3] 1'1 }, Y={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$a$1268 [5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$a$1268 [3:2] }
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$a$1268 [6] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$a$1268 [4] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$a$1268 [1:0] } = { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][1]$a$1268 [5] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$1273:
      Old ports: A=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274, B=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$b$1266
      New ports: A={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [3] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$a$1274 [3] 2'01 }, B={ 1'1 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [0] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [0] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][1]$b$1275 [0] }, Y={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$b$1266 [6:5] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$b$1266 [3:2] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$b$1266 [0] }
      New connections: { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$b$1266 [4] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$b$1266 [1] } = { 1'1 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$b$1266 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$1270:
      Old ports: A=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271, B=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$a$1265
      New ports: A={ 1'1 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [1] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [1] $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$a$1271 [1] 1'0 }, B={ $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272 [4] 1'1 $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][2][0]$b$1272 [2] 2'01 }, Y=$memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$a$1265 [4:0]
      New connections: $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$a$1265 [6:5] = { $memory$flatten\digit1.$auto$proc_rom.cc:150:do_switch$390$rdmux[0][1][0]$a$1265 [3] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$1234:
      Old ports: A=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$a$1235, B=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$b$1236, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$b$1224
      New ports: A={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$a$1235 [0] 1'1 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$a$1235 [1:0] }, B={ 1'0 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][3]$b$1236 [3] 2'11 }, Y={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$b$1224 [4:3] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$b$1224 [1:0] }
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$b$1224 [6:5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$b$1224 [2] } = { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$b$1224 [1] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$b$1224 [4] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$1231:
      Old ports: A=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$a$1232, B=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$a$1223
      New ports: A={ 2'11 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$a$1232 [2] }, B={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233 [5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][2]$b$1233 [3] 1'1 }, Y={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$a$1223 [5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$a$1223 [3:2] }
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$a$1223 [6] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$a$1223 [4] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$a$1223 [1:0] } = { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][1]$a$1223 [5] 3'111 }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$1228:
      Old ports: A=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229, B=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$b$1221
      New ports: A={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [3] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$a$1229 [3] 2'01 }, B={ 1'1 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [0] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [0] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][1]$b$1230 [0] }, Y={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$b$1221 [6:5] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$b$1221 [3:2] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$b$1221 [0] }
      New connections: { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$b$1221 [4] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$b$1221 [1] } = { 1'1 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$b$1221 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$1225:
      Old ports: A=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226, B=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$a$1220
      New ports: A={ 1'1 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [1] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [1] $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$a$1226 [1] 1'0 }, B={ $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227 [4] 1'1 $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][2][0]$b$1227 [2] 2'01 }, Y=$memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$a$1220 [4:0]
      New connections: $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$a$1220 [6:5] = { $memory$flatten\digit0.$auto$proc_rom.cc:150:do_switch$394$rdmux[0][1][0]$a$1220 [3] 1'1 }
  Optimizing cells in module \top.
Performed a total of 52 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

2.29.6. Executing OPT_DFF pass (perform DFF optimizations).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 85 unused wires.
<suppressed ~2 debug messages>

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.13. Executing OPT_DFF pass (perform DFF optimizations).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.16. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_80_ice40_alu for cells of type $alu.
Using template $paramod$956e79e8f8c5e64be7438155ae50a966e615cb04\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper maccmap for cells of type $macc.
  add 3'111 * \strobe.ocnt (3x2 bits, unsigned)
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_80_ice40_alu for cells of type $alu.
Using template $paramod$a950948e19702336540a1f557d0a91306bdb9188\_80_ice40_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:fff6594a30ae52c590f93d508ed574f83609cf62$paramod$e88b3a4bc8545494bcade16de148a0154e0084ca\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$20b1d0597707d55efcb9664e40f63985956d7680\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~1073 debug messages>

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~489 debug messages>

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~384 debug messages>
Removed a total of 128 cells.

2.32.3. Executing OPT_DFF pass (perform DFF optimizations).

2.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 57 unused cells and 380 unused wires.
<suppressed ~58 debug messages>

2.32.5. Finished fast OPT passes.

2.33. Executing ICE40_OPT pass (performing simple optimizations).

2.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1094.slice[0].carry: CO=\minCounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1097.slice[0].carry: CO=\counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1100.slice[0].carry: CO=\secCounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1103.slice[0].carry: CO=\cd_sync.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1106.slice[0].carry: CO=\minute.shifts [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1109.slice[0].carry: CO=\minute.scratchpad_bits [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1112.slice[0].carry: CO=\minute.scratchpad_bits [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1115.slice[0].carry: CO=\second.shifts [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1118.slice[0].carry: CO=\second.scratchpad_bits [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1121.slice[0].carry: CO=\second.scratchpad_bits [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1127.slice[0].carry: CO=\strobe.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$1972.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$1972.slice[4].carry: CO=1'0

2.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~36 debug messages>

2.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.4. Executing OPT_DFF pass (perform DFF optimizations).

2.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

2.33.6. Rerunning OPT passes. (Removed registers in this run.)

2.33.7. Running ICE40 specific optimizations.

2.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.10. Executing OPT_DFF pass (perform DFF optimizations).

2.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.12. Finished OPT passes. (There is nothing left to do.)

2.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
No more expansions possible.
<suppressed ~229 debug messages>

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$1097.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1100.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1103.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1106.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1109.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1112.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1115.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1118.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1121.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1127.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1094.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$1972.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$1972.slice[4].carry ($lut).

2.38. Executing ICE40_OPT pass (performing simple optimizations).

2.38.1. Running ICE40 specific optimizations.

2.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~237 debug messages>

2.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~798 debug messages>
Removed a total of 266 cells.

2.38.4. Executing OPT_DFF pass (perform DFF optimizations).

2.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1452 unused wires.
<suppressed ~1 debug messages>

2.38.6. Rerunning OPT passes. (Removed registers in this run.)

2.38.7. Running ICE40 specific optimizations.

2.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.10. Executing OPT_DFF pass (perform DFF optimizations).

2.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.12. Finished OPT passes. (There is nothing left to do.)

2.39. Executing TECHMAP pass (map to technology primitives).

2.39.1. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.40. Executing ABC pass (technology mapping using ABC).

2.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 588 gates and 819 wires to a netlist network with 229 inputs and 131 outputs.

2.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     218.
ABC: Participating nodes from both networks       =     460.
ABC: Participating nodes from the first network   =     220. (  78.85 % of nodes)
ABC: Participating nodes from the second network  =     240. (  86.02 % of nodes)
ABC: Node pairs (any polarity)                    =     220. (  78.85 % of names can be moved)
ABC: Node pairs (same polarity)                   =     146. (  52.33 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      278
ABC RESULTS:        internal signals:      459
ABC RESULTS:           input signals:      229
ABC RESULTS:          output signals:      131
Removing temp directory.

2.41. Executing ICE40_WRAPCARRY pass (wrap carries).

2.42. Executing TECHMAP pass (map to technology primitives).

2.42.1. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 11 unused cells and 526 unused wires.

2.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      368
  1-LUT               21
  2-LUT               46
  3-LUT              179
  4-LUT              122
  with \SB_CARRY    (#0)   80
  with \SB_CARRY    (#1)   83

Eliminating LUTs.
Number of LUTs:      368
  1-LUT               21
  2-LUT               46
  3-LUT              179
  4-LUT              122
  with \SB_CARRY    (#0)   80
  with \SB_CARRY    (#1)   83

Combining LUTs.
Number of LUTs:      350
  1-LUT               21
  2-LUT               26
  3-LUT              167
  4-LUT              136
  with \SB_CARRY    (#0)   80
  with \SB_CARRY    (#1)   83

Eliminated 0 LUTs.
Combined 18 LUTs.
<suppressed ~1990 debug messages>

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: /Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/mateijordache/Documents/github-stuff/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$419cd99c524984e86316be824e4fbf1d7b2aec3c\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$ff0881b6a38ff8b5c6827b9c051e63eb2b1133e6\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$1661fd1d8cfb54ddeba09cd7df814e0fd3aae40f\$lut for cells of type $lut.
Using template $paramod$12876a77a23933587641472d85bdc8e7478ad1c0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$60706ec56213e162b2b50cb37832db0ce0a86ab7\$lut for cells of type $lut.
Using template $paramod$197077b00c11589fe99760d60a3c06cb8ac7c1e0\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod$eb95d6a58038b5eb68f87b4f604db414879e7bb1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$044e8b1893c94f717651c5cd428e71c892566f52\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$f9333290b738a242cb30b0de8879c5396e3e6451\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$a3d9d50a26c80b5c42d9b864ac52f329113a426e\$lut for cells of type $lut.
Using template $paramod$756525f2419dda52bc65b69836b80c5eac092f6c\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$4b4b0d164889d1f0429c06b8785349a50e11c667\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$05c363abf9bf41737697db9a75c379869832d91c\$lut for cells of type $lut.
Using template $paramod$a54d8b8d2c90a828ee71c2d82e7e1612992a7ab8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1133 debug messages>
Removed 0 unused cells and 771 unused wires.

2.45. Executing AUTONAME pass.
Renamed 9256 objects in module top (44 iterations).
<suppressed ~819 debug messages>

2.46. Executing HIERARCHY pass (managing design hierarchy).

2.46.1. Analyzing design hierarchy..
Top module:  \top

2.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.47. Printing statistics.

=== top ===

   Number of wires:                296
   Number of wire bits:            954
   Number of public wires:         296
   Number of public wire bits:     954
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                650
     SB_CARRY                       80
     SB_DFFE                        12
     SB_DFFESR                     103
     SB_DFFSR                       92
     SB_GB_IO                        1
     SB_IO                          12
     SB_LUT4                       350

2.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3. Executing JSON backend.

End of script. Logfile hash: 86564e2e99, CPU: user 0.93s system 0.02s
Yosys 0.30+25 (git sha1 104edb458, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 32% 11x read_verilog (0 sec), 19% 1x abc (0 sec), ...
